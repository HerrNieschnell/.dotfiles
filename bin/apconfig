#!/bin/bash
################################################################################
#                             Access point script                              #
################################################################################

###############
#  superuser  #
###############

if [ $EUID != 0 ]; then
    sudo "$0" "$@"
    exit $?
fi


###############
#  arguments  #
###############

usage(){
	echo    "Usage: apconfig  [option]             <argument>"
	echo -n "                 -c | --channel       <number>       "
	echo "Use specific Channel [default=7]"
	echo -n "                 -p | --pass(phrase)  <passphrase>   "
	echo "Change passphrase [default=test1234]"
	echo -n "                 -h | --help                         "
	echo "Show this help."
}

while [[ $# -gt 0 ]] && [[ ."$1" = .-* ]] ; do
	opt="$1"
	shift
	case "$opt" in
		-c|--channel)
			CHANNEL="$1"
			shift
			;;
		-p|--password|--pass|--passphrase)
			PASS="$1"
			shift
			;;
		-h|--help)
			usage
			exit 0
			;;
		*)
			echo "Wrong option: $opt $1"
			echo ""
			usage
			exit 0
			;;
	esac
done

if [[ -z ${PASS+x} ]]; then
	read -p  "Enter passphrase or use default [test1234]:" PASS
	if [[ -z "$PASS" ]]; then
		PASS="test1234"
	fi
fi

###############
#  functions  #
###############

get_out() {
	ip route ls | grep default | awk '{print $5}'
}

get_in() {
	iw dev | grep Interface | awk '{print $2}'
}

IN="$(get_in)"
NETCTL="netctl-auto@${IN}.service"

systemctl stop $NETCTL
systemctl stop dnsmasq


OUT="$(get_out)"

while [[ $(get_out) == "" ]]; do
	OUT="$(get_out)"
	clear
	echo "Connect ethernet first!"
done
wait

CONFDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../config-files && pwd )"
HOSTAPDCONF="${CONFDIR}/hostapd-${IN}.conf"
DNSCONF="${CONFDIR}/dnsmasq-${IN}.conf"

EMPTY="echo -e \n\n"

wait
ip addr add 10.0.0.1/24 dev ${IN}

cat << EOF > $DNSCONF
no-resolv
interface=${IN}
dhcp-range=10.0.0.3,10.0.0.20,12h
server=8.8.8.8
server=8.8.4.4
EOF

cat << EOF > $HOSTAPDCONF
ssid=$(hostname)-AP
interface=${IN}
driver=nl80211
auth_algs=1
macaddr_acl=1
accept_mac_file=${CONFDIR}/hostapd.accept
hw_mode=g
ieee80211n=1
channel=${CHANNEL:-7}
ignore_broadcast_ssid=0
wpa=3
wpa_passphrase=${PASS}
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
EOF
wait

dnsmasq --no-hosts --conf-file=$DNSCONF 1> /dev/null

iptables --flush
iptables --table nat --flush
iptables --delete-chain
iptables --table nat --delete-chain
iptables --table nat --append POSTROUTING --out-interface $OUT --jump MASQUERADE
iptables --append FORWARD --in-interface $IN --jump ACCEPT

sysctl -w net.ipv4.ip_forward=1


hostapd -B $HOSTAPDCONF 1> /dev/null

clear
echo "Acces Point: $(hostname)-AP"
echo
echo "Add MAC addresses of allowed clients in:"
echo "~/.dotfiles/config-files/hostapd.accept"
echo
usage
$EMPTY
echo "Press ENTER to exit"
read dummy_keypress

rm -f $DNSCONF $HOSTAPDCONF
iptables --flush
iptables --table nat --flush
iptables --delete-chain
iptables --table nat --delete-chain
killall dnsmasq
killall hostapd
ip addr del 10.0.0.1/24 dev $IN
clear
wait
echo "Processes have been stopped!"
echo "Access Point has been stopped!"
systemctl start $NETCTL
systemctl start dnsmasq
